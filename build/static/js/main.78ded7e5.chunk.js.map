{"version":3,"sources":["config.js","components/atoms/AmbassadorImage.jsx","components/atoms/AmbassadorName.jsx","components/atoms/DisplayTwitter.jsx","components/atoms/DisplayLinkedIn.jsx","components/atoms/DisplayWebsite.jsx","components/atoms/DisplayEmail.jsx","components/molecules/SocialIcons.jsx","components/molecules/AmbassadorInfoHeader.jsx","components/atoms/AmbassadorDescription.jsx","components/Ambassador.jsx","components/ListOfAmbassadors.jsx","components/atoms/ProfileImage.jsx","components/atoms/InfoDescription.jsx","components/atoms/InfoBox.jsx","components/atoms/ProfileName.jsx","components/molecules/InfoHeader.jsx","components/molecules/MemberCard.jsx","components/molecules/ContributorCard.jsx","components/ProfileCard.jsx","components/ProfilesGrid.jsx","App.js","serviceWorker.js","index.js"],"names":["config","apiPeople","shopifyProxy","AmbassadorImage","props","react_default","a","createElement","id","src","concat","image","alt","width","AmbassadorName","className","name","DisplayTwitter","twitter","href","target","index_es","icon","size","color","DisplayLinkedIn","linkedin","DisplayWebsite","website","faGlobe","DisplayEmail","email","envelope","InfoHeader","person","publicLinkedIn","atoms_DisplayLinkedIn","publicTwitter","atoms_DisplayTwitter","publicWebsite","atoms_DisplayWebsite","publicEmail","atoms_DisplayEmail","AmbassadorInfoHeader","ambassador","atoms_AmbassadorName","publicName","SocialIcons","AmbassadorDescription","description","Ambassador","_dialogStyles","_this","this","dialogStyles","height","marginLeft","marginTop","left","top","Object","defineProperty","Card_default","style","borderRadius","onClick","simpleDialog","show","elevation","atoms_AmbassadorImage","gravatarUrl","react_skylight_lib_default","hideOnOverlayClicked","ref","molecules_AmbassadorInfoHeader","atoms_AmbassadorDescription","publicDescription","Component","ProfileImage","InfoDescription","InfoBox","children","ProfileName","atoms_ProfileName","MemberCard","useGravatar","atoms_ProfileImage","publicProfileAirtableUrl","atoms_InfoBox","molecules_InfoHeader","atoms_InfoDescription","ContributorCard","ProfileCard","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","gravatarStatus","airtableStatus","_this2","fetch","then","res","setState","status","catch","err","console","log","contributorStatus","molecules_MemberCard","molecules_ContributorCard","react","masonryOptions","transitionDuration","imagesLoadedOptions","background","padding","ProfilesGrid","people","array","i","length","j","Math","floor","random","_ref","shuffleArray","rel","react_masonry_component_lib_default","elementType","options","disableImagesLoaded","updateOnEachImageLoad","map","showOnWebsite","components_ProfileCard","key","App","firstLoad","url","window","method","response","info","json","error","getPeople","data","location","reload","components_ProfilesGrid","values","persist","Boolean","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.78ded7e5.chunk.js","sourcesContent":["export const config = {\n  apiPeople: 'https://enspiral-airtable-api-proxy.firebaseio.com/persons/.json',\n  shopifyProxy: '/tools/database/persons/.json'\n}\n","import React from 'react';\n\nfunction AmbassadorImage(props) {\n  return (\n    <div>\n      <img id=\"ambassador-image-id\" src={`${props.image}?s=400`} alt='ambassadors' width='100%' />\n    </div>\n  )\n}\n\nexport default AmbassadorImage;    ","import React from 'react';\n\nfunction AmbassadorName(props) {\n  return (\n    <div className='ambassador-name'>\n      {props.name}\n    </div>\n  );\n}\n\nexport default AmbassadorName;","import React from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nfunction DisplayTwitter(props) {\n  const { twitter } = props\n  return (\n    <div className='social-icons'>\n      <a href={twitter} target='_blank'><FontAwesomeIcon icon={['fab', 'twitter']} size='1x' color='#353535' /></a>\n    </div>\n  )\n}\n\nexport default DisplayTwitter\n","import React from 'react'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport brands from '@fortawesome/fontawesome-free-brands'\n\nfunction DisplayLinkedIn (props) {\n  const {linkedin} = props\n  return (\n    <div className='social-icons'>\n      <a href={linkedin} target='_blank'><FontAwesomeIcon icon={['fab', 'linkedin']} size='1x' color='#353535' /></a>\n    </div>\n  )\n}\n\nexport default DisplayLinkedIn\n","import React from 'react'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport faGlobe from '@fortawesome/fontawesome-free-solid/faGlobe'\n\nfunction DisplayWebsite (props) {\n  const {website} = props\n  return (\n    <div className='social-icons'>\n      <a href={website} target='_blank'><FontAwesomeIcon icon={faGlobe} size='1x' color='#353535' /></a>\n    </div>\n  )\n}\n\nexport default DisplayWebsite\n","import React from 'react'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport envelope from '@fortawesome/fontawesome-free-solid/faEnvelope'\n\nfunction DisplayEmail (props) {\n  const { email } = props\n  return (\n    <div className='social-icons'>\n      <a href={'mailto:' + email}><FontAwesomeIcon icon={envelope} size='1x' color='#353535' /></a>\n    </div>\n  )\n}\n\nexport default DisplayEmail\n","import React from 'react';\n\nimport DisplayTwitter from '../atoms/DisplayTwitter'\nimport DisplayLinkedIn from '../atoms/DisplayLinkedIn'\nimport DisplayWebsite from '../atoms/DisplayWebsite'\nimport DisplayEmail from '../atoms/DisplayEmail'\n\nfunction InfoHeader(props) {\n  const {person} = props\n  return (\n      <div className='social-icon-container'>\n        {person.publicLinkedIn ? <DisplayLinkedIn linkedin={person.publicLinkedIn} /> : <span />}\n        {person.publicTwitter ? <DisplayTwitter twitter={person.publicTwitter} /> : <span />}\n        {person.publicWebsite ? <DisplayWebsite website={person.publicWebsite} /> : <span />}\n        {person.publicEmail ? <DisplayEmail email={person.publicEmail} /> : <span />}\n      </div>\n  );\n}\n\nexport default InfoHeader;","\nimport React from 'react';\n\nimport AmbassadorName from '../atoms/AmbassadorName'\nimport SocialIcons from './SocialIcons'\n\nfunction AmbassadorInfoHeader(props) {\n  const { ambassador } = props\n  return (\n    <div className='ambassador-info-header'>\n      <AmbassadorName name={ambassador.publicName} />\n      <SocialIcons person={ambassador} />\n    </div>\n  );\n}\n\nexport default AmbassadorInfoHeader;","import React, { Component } from 'react';\n\nfunction AmbassadorDescription(props) {\n    return (\n      <div className='ambassador-profile'>\n        {props.description}\n      </div>\n    );\n}\n\nexport default AmbassadorDescription;","import React, { Component } from 'react';\nimport SkyLight from 'react-skylight'\nimport Card from '@material-ui/core/Card'\n\nimport AmbassadorImage from './atoms/AmbassadorImage'\nimport AmbassadorInfoHeader from './molecules/AmbassadorInfoHeader'\nimport AmbassadorDescription from './atoms/AmbassadorDescription'\n\n\nclass Ambassador extends Component {\n  render () {\n    const styles = {\n        borderRadius: '50%'\n    }\n\n    const dialogStyles = {\n      width: '400px',\n      height: 'auto',\n      marginLeft: '-200px',\n      marginTop: '-250px',\n      left: '0%',\n      top: '50%',\n      left: '50%',\n      padding: 0\n    }\n    const { ambassador } = this.props\n    return (\n      <div>\n        <Card className='ambassador-lists' style={styles} onClick={() => this.simpleDialog.show()} elevation={8}>\n          <div className='ambassador-image'>\n            {ambassador && <AmbassadorImage image={ambassador.gravatarUrl} /> }\n          </div>\n        </Card>\n        <SkyLight \n        hideOnOverlayClicked ref={ref => this.simpleDialog = ref} \n        dialogStyles={dialogStyles}\n        \n        >\n          <div className='ambassador-wrapper'>\n            <div className='ambassador-image-skylight'>\n              {ambassador && <AmbassadorImage image={ambassador.gravatarUrl} />}\n            </div>\n            <div className='ambassador-banner' />\n              <AmbassadorInfoHeader ambassador={ambassador} />\n              <AmbassadorDescription description={ambassador.publicDescription} />\n          </div>\n        </SkyLight>\n      </div>\n    )\n  }\n}\n\nexport default Ambassador;\n","import React, {Component} from 'react'\nimport { map } from 'lodash'\n\nimport Ambassador from './Ambassador'\n\nclass ListOfAmbassadors extends Component {\n  render () {\n    const { people } = this.props\n    return (\n      <div>\n        <div className='community-titles'>Ambassadors</div>\n        <div className='ambassadors'>\n          {map(people, (person, key) => {\n            return person.isAmbassador &&\n              <Ambassador key={key} ambassador={person} />\n          })}\n        </div>\n      </div>\n    )\n  }\n}\nexport default ListOfAmbassadors\n","import React from 'react';\n\nfunction ProfileImage (props) {\n    return (\n        <div className='profile-image'>\n          <img src={`${props.image}`} alt='name' width='100%'/>\n        </div>\n    )\n  }\n\n export default ProfileImage;    ","import React from 'react';\n\nfunction InfoDescription(props) {\n    return (\n        <div className='profile-description'>\n          {props.description}\n        </div>\n    );\n}\n\nexport default InfoDescription","import React from 'react'\n\nexport function InfoBox (props) {\n  return (\n    <div className='info-container'>\n      {props.children}\n    </div>\n  )\n}\n\nexport default InfoBox\n","import React from 'react';\n\nfunction ProfileName (props) {\n    return (\n      <div className='profile-name'>\n        {props.name}\n      </div>\n    );\n}\n\nexport default ProfileName;","\nimport React from 'react';\n\nimport ProfileName from '../atoms/ProfileName'\nimport SocialIcons from './SocialIcons'\n\nfunction InfoHeader (props) {\n  const {person} = props\n    return (\n      <div className='info-header'>\n        <ProfileName name={person.publicName} />\n        <SocialIcons person={person}/>\n      </div>\n    );\n  }\n  \n  export default InfoHeader;","import React from 'react'\nimport Card from '@material-ui/core/Card'\n\nimport ProfileImage from '../atoms/ProfileImage'\nimport InfoDescription from '../atoms/InfoDescription'\nimport InfoBox from '../atoms/InfoBox'\nimport InfoHeader from './InfoHeader'\n\nexport function MemberCard (props) {\n  const person = props.person\n  return (\n    <Card className='profile-card profile-card__member'>\n      {\n        person.useGravatar\n        ? <ProfileImage image={person.gravatarUrl} />\n        : <ProfileImage image={person.publicProfileAirtableUrl} />\n      }\n      <InfoBox>\n        <InfoHeader person={person} />\n        <InfoDescription description={person.publicDescription} />\n      </InfoBox>\n    </Card>\n  )\n}\n\nexport default MemberCard\n","import React from 'react'\n\nimport ProfileImage from '../atoms/ProfileImage'\nimport InfoDescription from '../atoms/InfoDescription'\nimport InfoBox from '../atoms/InfoBox'\nimport InfoHeader from './InfoHeader'\n\nexport function ContributorCard (props) {\n  const person = props.person\n  return (\n    <div className='profile-card profile-card__contributor'>\n      {\n        person.useGravatar\n        ? <ProfileImage image={person.gravatarUrl} />\n        : <ProfileImage image={person.publicProfileAirtableUrl} />\n      }\n      <InfoBox>\n        <InfoHeader person={person} />\n        <InfoDescription description={person.publicDescription} />\n      </InfoBox>\n    </div>\n  )\n}\n\nexport default ContributorCard\n","import React, { Component, Fragment } from 'react'\n\nimport MemberCard from './molecules/MemberCard'\nimport ContributorCard from './molecules/ContributorCard'\n\nclass ProfileCard extends Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      person: props.person,\n      gravatarStatus: 404,\n      airtableStatus: 404\n    }\n  }\n\n  componentDidMount () {\n    if (this.state.person.gravatarUrl) {\n      fetch(this.state.person.gravatarUrl)\n      .then((res) => {\n        this.setState({\n          gravatarStatus: res.status\n        })\n      }).catch((err) => {\n        console.log(err)\n      })\n    }\n    if (this.state.person.publicProfileAirtableUrl) {\n      fetch(this.state.person.publicProfileAirtableUrl)\n      .then((res) => {\n        console.log(this.state.person.publicProfileAirtableUrl)\n        this.setState({\n          airtableStatus: res.status\n        })\n      }).catch((err) => {\n        console.log(err)\n      })\n    }\n  }\n  render () {\n    const { person } = this.props\n    if (this.state.gravatarStatus !== 404 || this.state.airtableStatus !== 404) {\n      return (\n        <div className='card-wrapper'>\n          {person.contributorStatus === 'Member'\n            ? <MemberCard person={person} />\n            : <ContributorCard person={person} /> }\n        </div>\n      )\n    } else {\n      return <Fragment />\n    }\n  }\n}\n\nexport default ProfileCard\n","import React from 'react'\nimport Masonry from 'react-masonry-component'\nimport {map} from 'lodash'\n\nimport ProfileCard from './ProfileCard'\n\nconst masonryOptions = {\n  transitionDuration: 0\n}\nconst imagesLoadedOptions = { background: '.my-bg-image-el' }\n\nconst style = {\n  padding: '0px'\n}\n\nfunction shuffleArray(array) {\n  for (let i = array.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [array[i], array[j]] = [array[j], array[i]];\n  }\n}\n\nfunction ProfilesGrid(props) {\n  const { people } = props\n  shuffleArray(people)\n  return (\n    <div className='typography'>\n      <link href=\"https://fonts.googleapis.com/css2?family=Poppins:ital,wght@0,100;0,300;0,400;0,500;0,700;1,100;1,300;1,400;1,700&display=swap\" rel=\"stylesheet\"></link>\n      <h1 className='community-titles'><span style={{color:\"#03A095\"}}>Contributors</span> and <span style={{color:\"#805298\"}}>Membors</span></h1>\n      <Masonry\n        className={'cards'}\n        style={style}\n        elementType={'ul'}\n        options={masonryOptions}\n        disableImagesLoaded={false}\n        updateOnEachImageLoad={false}\n        imagesLoadedOptions={imagesLoadedOptions}\n      >\n        {\n          map(people, (person) => {\n            if(person.showOnWebsite) {\n              if(person.useGravatar || person.publicProfileAirtableUrl) {\n                return (<ProfileCard key={person.id} person={person} />)\n              }\n            }\n          })\n        }\n      </Masonry>\n    </div>\n  )\n}\n\nexport default ProfilesGrid\n","import React, { Component } from 'react'\nimport persist from 'react-localstorage-hoc'\n\nimport { config } from './config.js'\n\nimport ListOfAmbassadors from './components/ListOfAmbassadors'\nimport ProfilesGrid from './components/ProfilesGrid'\n\nclass App extends Component {\n  constructor () {\n    super()\n    this.state = {\n      people: null,\n      firstLoad: true\n    }\n  }\n\n  componentDidMount () {\n    getPeople()\n      .then((data) => {\n        console.log('getpeople data: ', data)\n        this.setState({\n          people: data\n        })\n        if (this.state.firstLoad) {\n          this.setState({\n            firstLoad: false\n          })\n          window.location.reload()\n        }\n      }).catch((err) => {\n        console.log('Big ooooooops! ', err)\n      })\n  }\n\n  render () {\n    const { people } = this.state\n    return (\n      <div className='App'>\n        {people && <ProfilesGrid people={Object.values(people)} />}\n      </div>\n    )\n  }\n}\n\nfunction getPeople () {\n  const url = config.apiPeople\n  return window.fetch(url, {\n    method: 'get'\n  }).then((response) => {\n    console.info('Api request success: ', response)\n    return response.json()\n  }).catch((err) => {\n    console.error('Api request error: ', err)\n  })\n}\nexport default persist(App)\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/css/index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root-community'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}